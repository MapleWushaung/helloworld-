<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
	<!-- 这个标签用来读取jdbc.properties -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置数据源 c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="driverClass">
			<value>${driverClass}</value>
		</property>

		<property name="jdbcUrl">
			<value>${jdbcUrl}</value>
		</property>

		<property name="user">
			<value>${user}</value>
		</property>

		<property name="password">
			<value>${password}</value>
		</property>
		<!-- 设置连接的初始连接个数 -->
		<property name="initialPoolSize">
			<value>5</value>
		</property>
		<!-- 设置最小连接个数 -->
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<!-- 这是最大连接数 -->
		<property name="maxPoolSize">
			<value>50</value>
		</property>

		<!-- 设置自增的连接个数 -->
		<property name="acquireIncrement">
			<value>10</value>
		</property>

		<!-- 配置连接的有效期 表示连接的空闲时间，单位是秒，默认值0表示即使空闲也不被回收，设置60秒， 表示60秒内如果该连接未被使用则被回收 -->
		<property name="maxIdleTime">
			<value>60</value>
		</property>
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- 配置mapper ，让spring创建mapper的对象 -->

	<bean id="mapperScannerConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wushuang.mapper"></property>
	</bean>
	<!-- 让spring扫描base-package下的文件，根据注解创建对象 -->
	<context:component-scan base-package="com.wushuang.dao"></context:component-scan>
	<context:component-scan base-package="com.wushuang.service"></context:component-scan>
	<context:component-scan base-package="com.wushuang.aop"></context:component-scan>

   <!-- 开启aop注解 -->
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 配置spring的事务管理 -->

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- 配置spring事务的注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager" />



</beans>
